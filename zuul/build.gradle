buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'jacoco'

group = 'com.devbadger'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	maven { url "http://repo.maven.apache.org/maven2" }
}


dependencies {
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version:'1.5.8.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'1.5.8.RELEASE'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-zuul', version: '1.3.6.RELEASE'
	testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.5.8.RELEASE') {
		exclude(module: 'commons-logging')
	}
}


task image(type: Docker, dependsOn: build ) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into "${stageDir}/target"

		}
	}
}

task publishImage(type: Docker, dependsOn: build ) {
	applicationName = jar.baseName
	push = true
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into "${stageDir}/target"

		}
	}
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}